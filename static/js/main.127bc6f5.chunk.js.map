{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","_useState","useState","_useState2","_slicedToArray","text","setText","_useState3","_useState4","verificationText","setVerificationText","_useState5","_useState6","savedWords","setSavedWords","_useState7","_useState8","message","setMessage","React","createElement","className","onSubmit","event","preventDefault","concat","_toConsumableArray","console","log","htmlFor","type","id","placeholder","value","onChange","target","onClick","includes","role","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"wKAyGeA,MAvGf,WACE,IAAAC,EAAwBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,EAAgDL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAArDE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GAC5CG,EAAoCT,mBAAS,IAAGU,EAAAR,YAAAO,EAAA,GAAzCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,EAA8Bb,mBAAS,IAAGc,EAAAZ,YAAAW,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAyB1B,OACEG,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,MAAIC,UAAU,aAAY,0BAC1BF,IAAAC,cAAA,KAAGC,UAAU,QAAO,0DAGpBF,IAAAC,cAAA,MAAIC,UAAU,SACdF,IAAAC,cAAA,QAAME,SA/BS,SAACC,GACpBA,EAAMC,iBACNV,EAAc,GAADW,OAAAC,YAAKb,GAAU,CAAER,KAC9BsB,QAAQC,IAAIvB,KA6BNc,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,SAAOS,QAAQ,4BAA2B,iBAC1CV,IAAAC,cAAA,SACEU,KAAK,OACLT,UAAU,eACVU,GAAG,2BACHC,YAAY,sBACZC,MAAO5B,EACP6B,SAlCS,SAACX,GACpBjB,EAAQiB,EAAMY,OAAOF,UAmCbd,IAAAC,cAAA,WACAD,IAAAC,cAAA,UAAQU,KAAK,SAAST,UAAU,mBAAkB,WAIpDF,IAAAC,cAAA,WACAD,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,SAAOS,QAAQ,iCAAgC,mBAG/CV,IAAAC,cAAA,SACEU,KAAK,OACLT,UAAU,eACVU,GAAG,gCACHC,YAAY,+BACZC,MAAOxB,EACPyB,SAhDqB,SAACX,GAChCb,EAAoBa,EAAMY,OAAOF,WAkD3Bd,IAAAC,cAAA,WACAD,IAAAC,cAAA,UACEU,KAAK,SACLT,UAAU,kBACVe,QAnDuB,SAACb,GAChCA,EAAMC,iBACFX,EAAWwB,SAAS5B,GACtBS,EAAW,kCAEXA,EAAW,wCA+CN,WAIHC,IAAAC,cAAA,WACAD,IAAAC,cAAA,OACEC,UAAS,SAAAI,OACPR,EACIJ,EAAWwB,SAAS5B,GAClB,gBACA,eACF,cAEN6B,KAAK,QACLP,GAAG,WAEFd,GAAW,2BAGdE,IAAAC,cAAA,kGCjFOmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,SAAAC,GAAkD,IAA/CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,OCDDS,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHlC,IAAAC,cAACD,IAAMmC,WAAU,KACfnC,IAAAC,cAACpB,EAAG,QAORuC,K","file":"static/js/main.127bc6f5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction App() {\n  const [text, setText] = useState(\"\");\n  const [verificationText, setVerificationText] = useState(\"\");\n  const [savedWords, setSavedWords] = useState([]);\n  const [message, setMessage] = useState(\"\");\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setSavedWords([...savedWords, text]);\n    console.log(text);\n  };\n\n  const handleChange = (event) => {\n    setText(event.target.value);\n  };\n\n  const handleVerificationChange = (event) => {\n    setVerificationText(event.target.value);\n  };\n\n  const handleVerificationSubmit = (event) => {\n    event.preventDefault();\n    if (savedWords.includes(verificationText)) {\n      setMessage(\"The word is in the dictionary!\");\n    } else {\n      setMessage(\"The word is not in the dictionary.\");\n    }\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"jumbotron\">\n        <h1 className=\"display-4\">Dictionary Application</h1>\n        <p className=\"lead\">\n          This project has been built using React and Bootstrap.\n        </p>\n        <hr className=\"my-4\" />\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleFormControlInput1\">Save the word</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"exampleFormControlInput1\"\n              placeholder=\"Type something here\"\n              value={text}\n              onChange={handleChange}\n            />\n            <ul></ul>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </div>\n          <ul></ul>\n          <div className=\"form-group\">\n            <label htmlFor=\"verificationFormControlInput1\">\n              Verify the word\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"verificationFormControlInput1\"\n              placeholder=\"Type the word to verify here\"\n              value={verificationText}\n              onChange={handleVerificationChange}\n            />\n          </div>\n          <ul></ul>\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            onClick={handleVerificationSubmit}\n          >\n            Verify\n          </button>\n        </form>\n        <ul></ul>\n        <div\n          className={`alert ${\n            message\n              ? savedWords.includes(verificationText)\n                ? \"alert-success\"\n                : \"alert-danger\"\n              : \"alert-info\"\n          }`}\n          role=\"alert\"\n          id=\"message\"\n        >\n          {message || \"Enter a word to verify.\"}\n        </div>\n\n        <style>\n          {`\n          body {\n            background-color: grey;\n          }\n        `}\n        </style>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}